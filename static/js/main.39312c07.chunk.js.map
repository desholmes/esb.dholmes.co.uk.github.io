{"version":3,"sources":["components/Footer/index.js","components/Transactions/index.js","App.js","reportWebVitals.js","index.js"],"names":["year","Date","getFullYear","EsbFooter","Footer","background","pad","justify","Text","align","getBalance","transactions","balance","parseFloat","i","length","Transactions","props","apiUrl","user","useState","loading","appState","setAppState","createTransactions","feedResponse","map","entry","index","id","$t","substring","lastIndexOf","key","date","gsx$date","amount","gsx$amount","displayAmount","indexOf","toFixed","useEffect","fetch","then","res","json","response","feed","reverse","Box","overflow","Button","margin","onClick","primary","label","Heading","level","direction","height","width","color","Table","TableHeader","TableRow","TableCell","scope","border","TableBody","transaction","theme","global","colors","brand","font","family","size","users","SH","EH","rootClasses","localeDate","toLocaleString","replace","displayDate","App","activeUser","setActiveUser","rootClass","setRootClass","updateUser","className","Grommet","themeMode","full","Grid","fill","rows","Header","Avatar","alignSelf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39312c07.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Footer,\n    Text\n} from \"grommet\";\n\nconst year = new Date().getFullYear();\n\nfunction EsbFooter() {\n  return (\n    <Footer background=\"brand\" pad=\"medium\" justify=\"center\">\n        <Text align=\"center\">Copyright ESB &copy;{year}</Text>\n    </Footer>\n  );\n}\n\nexport default EsbFooter;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Heading,\n  Table,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableRow,\n} from \"grommet\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nconst getBalance = (transactions) => {\n  let balance = parseFloat(transactions[0][\"amount\"]);\n  for (let i = 1; i < transactions.length; i++) {\n    balance += parseFloat(transactions[i][\"amount\"]);\n  }\n  return balance;\n};\n\nconst getDisplayAmount = (amount) => {\n  if (amount.indexOf(\"-\") === 0) {\n    return `-£${parseFloat(amount.substring(1, amount.length)).toFixed(2)}`;\n  } else {\n    return `£${parseFloat(amount).toFixed(2)}`;\n  }\n};\n\nfunction Transactions(props) {\n  const apiUrl = `https://spreadsheets.google.com/feeds/list/1WYnauh6xhyMscmutXPTeDOUdKVbjYaBVwEt1SbImPeg/${props.user}/public/full?alt=json`;\n  const [appState, setAppState] = useState({\n    loading: true,\n    transactions: [],\n    balance: \"0\",\n  });\n\n  const refreshBalance = () => {\n    setAppState({ loading: true });\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        const transactions = createTransactions(response.feed.entry);\n        setAppState({\n          loading: false,\n          balance: getBalance(transactions),\n          transactions: transactions.reverse(),\n        });\n      });\n  };\n\n  const createTransactions = (feedResponse) => {\n    const transactions = feedResponse.map((entry, index) => {\n      return {\n        id: entry.id.$t.substring(\n          entry.id.$t.lastIndexOf(\"/\") + 1,\n          entry.id.$t.length\n        ),\n        key: index,\n        date: entry.gsx$date.$t,\n        amount: entry.gsx$amount.$t,\n        displayAmount: getDisplayAmount(entry.gsx$amount.$t),\n      };\n    });\n    return transactions;\n  };\n\n  useEffect(() => {\n    setAppState({ loading: true });\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        const transactions = createTransactions(response.feed.entry);\n        setAppState({\n          loading: false,\n          balance: getBalance(transactions),\n          transactions: transactions.reverse(),\n        });\n      });\n  }, [setAppState, apiUrl]);\n\n  return (\n    <Box pad=\"none\" overflow=\"scroll\">\n      <Button margin=\"small\" onClick={refreshBalance} primary label=\"Refresh\" />\n      <Heading level=\"2\" margin=\"small\">\n        Balance: {!appState.loading ? `£${appState.balance}` : \"...\"}\n      </Heading>\n      <Heading level=\"3\" margin=\"small\">\n        Transactions\n      </Heading>\n      <Box direction=\"row\" justify=\"center\">\n        <ScaleLoader\n          height={50}\n          width={4}\n          color={\"#228BE6\"}\n          loading={appState.loading}\n        />\n      </Box>\n      <Box pad=\"none\">\n      {appState.transactions && (\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableCell scope=\"col\" border=\"bottom\">\n                <strong>Date</strong>\n              </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                <strong>Amount</strong>\n              </TableCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {appState.transactions &&\n              appState.transactions.map((transaction, index) => (\n                <TableRow key={index}>\n                  <TableCell scope=\"row\">{transaction.date}</TableCell>\n                  <TableCell>{transaction.displayAmount}</TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n      )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Transactions;\n","import React, { useState } from \"react\";\nimport { Avatar, Button, Box, Header, Heading, Grommet, Grid } from \"grommet\";\n\nimport Footer from \"./components/Footer\";\nimport Transactions from \"./components/Transactions\";\n\nimport \"./App.scss\";\n\nconst theme = {\n  global: {\n    colors: {\n      brand: \"#228BE6\",\n    },\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n  },\n};\nconst users = { SH: 1, EH: 2 };\nconst rootClasses = [\"\", \"red\", \"purple\"];\nconst date = new Date();\nconst localeDate = date.toLocaleString().replace(\",\", \"\");\nconst displayDate = localeDate.substring(0, localeDate.lastIndexOf(\":\"));\n\nfunction App() {\n  const [activeUser, setActiveUser] = useState(false);\n  const [rootClass, setRootClass] = useState(\"default\");\n\n  const updateUser = (user) => {\n    setActiveUser(user);\n    setRootClass(rootClasses[users[user]]);\n  };\n\n  return (\n    <div className={rootClass}>\n      <Grommet theme={theme} themeMode=\"dark\" full={true}>\n        <Grid fill direction=\"column\" rows={[\"auto\", \"flex\", \"auto\"]}>\n          <Header background=\"brand\" pad=\"medium\">\n            <Heading level=\"1\" margin=\"none\">\n              ESB\n            </Heading>\n            {activeUser &&\n            <Avatar background=\"#bee1ff\">\n              <Heading level=\"4\" margin=\"none\">\n                {activeUser}\n              </Heading>\n            </Avatar>\n            }\n          </Header>\n          <Box pad=\"small\">\n            {!activeUser &&\n              <Heading level=\"4\" margin=\"medium\">Select a user:</Heading>\n            }\n            {activeUser &&\n              <Heading level=\"4\" margin=\"small\" alignSelf=\"end\">\n                {displayDate}\n              </Heading>\n            }\n            {activeUser ? (\n              <Transactions user={users[activeUser]}></Transactions>\n            ) : (\n              <Box margin=\"\">\n                <Button\n                  margin=\"small\"\n                  onClick={() => updateUser(\"EH\")}\n                  primary\n                  label=\"EH\"\n                />\n                <Button\n                  margin=\"small\"\n                  onClick={() => updateUser(\"SH\")}\n                  primary\n                  label=\"SH\"\n                />\n              </Box>\n            )}\n          </Box>\n          <Box justify=\"end\" direction=\"column\">\n            <Footer />\n          </Box>\n        </Grid>\n      </Grommet>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
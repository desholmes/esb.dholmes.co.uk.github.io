{"version":3,"sources":["components/Footer/index.js","components/Transactions/index.js","App.js","reportWebVitals.js","index.js"],"names":["year","Date","getFullYear","EsbFooter","Footer","background","pad","justify","Text","align","getBalance","transactions","balance","parseFloat","i","length","Transactions","props","apiUrl","user","useState","loading","appState","setAppState","useEffect","fetch","then","res","json","response","feed","entry","map","index","id","$t","substring","lastIndexOf","key","date","gsx$date","amount","gsx$amount","displayAmount","indexOf","reverse","Box","overflow","Heading","level","margin","direction","height","width","color","Table","TableHeader","TableRow","TableCell","scope","border","TableBody","transaction","theme","global","colors","brand","font","family","size","users","localeDate","toLocaleString","replace","displayDate","App","URLSearchParams","window","location","search","get","Grommet","themeMode","full","Grid","fill","rows","Header","Avatar","alignSelf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f1b2984.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Footer,\n    Text\n} from \"grommet\";\n\nconst year = new Date().getFullYear();\n\nfunction EsbFooter() {\n  return (\n    <Footer background=\"brand\" pad=\"medium\" justify=\"center\">\n        <Text align=\"center\">Copyright ESB &copy;{year}</Text>\n    </Footer>\n  );\n}\n\nexport default EsbFooter;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Heading,\n  Table,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableRow,\n} from \"grommet\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nconst getBalance = (transactions) => {\n  let balance = parseFloat(transactions[0][\"amount\"]);\n  for (let i = 1; i < transactions.length; i++) {\n    balance += parseFloat(transactions[i][\"amount\"]);\n  }\n  return balance;\n};\n\nconst getDisplayAmount = (amount) => {\n  if (amount.indexOf(\"-\")===0){\n    return `-£${amount.substring(1,amount.length)}`;\n  } else {\n    return `£${amount}`;\n  }\n}\n\nfunction Transactions(props) {\n  const apiUrl = `https://spreadsheets.google.com/feeds/list/1WYnauh6xhyMscmutXPTeDOUdKVbjYaBVwEt1SbImPeg/${props.user}/public/full?alt=json`;\n  const [appState, setAppState] = useState({\n    loading: true,\n    transactions: [],\n    balance: \"0\",\n  });\n\n  useEffect(() => {\n    setAppState({ loading: true });\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((response) => {\n        const transactions = response.feed.entry.map((entry, index) => {\n          return {\n            id: entry.id.$t.substring(\n              entry.id.$t.lastIndexOf(\"/\") + 1,\n              entry.id.$t.length\n            ),\n            key: index,\n            date: entry.gsx$date.$t,\n            amount: entry.gsx$amount.$t,\n            displayAmount: getDisplayAmount(entry.gsx$amount.$t)\n          };\n        });\n        setAppState({\n          loading: false,\n          balance: getBalance(transactions),\n          transactions: transactions.reverse(),\n        });\n      });\n  }, [setAppState, apiUrl]);\n\n  return (\n    <Box pad=\"none\" overflow=\"auto\">\n      <Heading level=\"2\" margin=\"small\">\n        Balance: {!appState.loading ? `£${appState.balance}` : \"...\"}\n      </Heading>\n      <Heading level=\"3\" margin=\"small\">\n        Transactions\n      </Heading>\n      <Box direction=\"row\" justify=\"center\">\n        <ScaleLoader\n          height={50}\n          width={4}\n          color={\"#228BE6\"}\n          loading={appState.loading}\n        />\n      </Box>\n      {appState.transactions &&\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableCell scope=\"col\" border=\"bottom\">\n              <strong>Date</strong>\n            </TableCell>\n            <TableCell scope=\"col\" border=\"bottom\">\n              <strong>Amount</strong>\n            </TableCell>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {appState.transactions &&\n            appState.transactions.map((transaction, index) => (\n              <TableRow key={index}>\n                <TableCell scope=\"row\">{transaction.date}</TableCell>\n                <TableCell>{transaction.displayAmount}</TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>}\n    </Box>\n  );\n}\n\nexport default Transactions;\n","import React from \"react\";\nimport { Avatar, Box, Header, Heading, Grommet, Grid } from \"grommet\";\n\nimport Footer from \"./components/Footer\";\nimport Transactions from \"./components/Transactions\";\n\nconst theme = {\n  global: {\n    colors: {\n      brand: \"#228BE6\",\n    },\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n  },\n};\n\nconst users = [\"\", \"SH\", \"EH\"];\nconst date = new Date();\nconst localeDate = date.toLocaleString().replace(\",\", \"\");\nconst displayDate = localeDate.substring(0,\n  localeDate.lastIndexOf(\":\")\n);\n\nfunction App() {\n  const params = new URLSearchParams(window.location.search);\n  const user = params.get(\"user\");\n  return (\n    <Grommet theme={theme} themeMode=\"dark\" full={true}>\n      <Grid fill direction=\"column\" rows={[\"auto\", \"flex\", \"auto\"]}>\n        <Header background=\"brand\" pad=\"medium\">\n          <Heading level=\"1\" margin=\"none\">\n            ESB\n          </Heading>\n          <Avatar background=\"#bee1ff\">\n            <Heading level=\"4\" margin=\"none\">\n              {users[user]}\n            </Heading>\n          </Avatar>\n        </Header>\n        <Box pad=\"small\">\n          <Heading level=\"4\" margin=\"small\" alignSelf=\"end\">\n            {displayDate}\n          </Heading>\n          <Transactions user={user}></Transactions>\n        </Box>\n        <Box justify=\"end\" direction=\"column\">\n          <Footer />\n        </Box>\n      </Grid>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}